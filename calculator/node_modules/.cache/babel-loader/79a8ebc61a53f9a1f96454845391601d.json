{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HP\\\\Documents\\\\Front-end\\\\calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './action';\nconst initialState = {\n  result: '0',\n  value: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ZERO:\n      return _objectSpread({}, state, {\n        result: state.result + '0'\n      });\n\n    case actionTypes.ONE:\n      return _objectSpread({}, state, {\n        result: state.result + '1'\n      });\n\n    case actionTypes.TWO:\n      return _objectSpread({}, state, {\n        result: state.result + '2'\n      });\n\n    case actionTypes.THREE:\n      return _objectSpread({}, state, {\n        result: state.result + '3'\n      });\n\n    case actionTypes.FOUR:\n      return _objectSpread({}, state, {\n        result: state.result + '4'\n      });\n\n    case actionTypes.FIVE:\n      return _objectSpread({}, state, {\n        result: state.result + '5'\n      });\n\n    case actionTypes.SIX:\n      return _objectSpread({}, state, {\n        result: state.result + '6'\n      });\n\n    case actionTypes.SEVEN:\n      return _objectSpread({}, state, {\n        result: state.result + '7'\n      });\n\n    case actionTypes.EIGHT:\n      return _objectSpread({}, state, {\n        result: state.result + '8'\n      });\n\n    case actionTypes.NINE:\n      return _objectSpread({}, state, {\n        result: state.result + '9'\n      });\n\n    case actionTypes.ADD:\n      return {\n        result: '+'\n      };\n\n    case actionTypes.SUBTRACT:\n      return {\n        result: '-'\n      };\n\n    case actionTypes.MULTIPLY:\n      return {\n        result: '*'\n      };\n\n    case actionTypes.DIVIDE:\n      return {\n        result: '/'\n      };\n\n    case actionTypes.EQUAL:\n      return {\n        result: '='\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\HP\\Documents\\Front-end\\calculator\\src\\store\\reducer.js"],"names":["actionTypes","initialState","result","value","reducer","state","action","type","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ADD","SUBTRACT","MULTIPLY","DIVIDE","EQUAL"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,GADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,IAAjB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACS,GAAjB;AACI,+BACOJ,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACU,GAAjB;AACI,+BACOL,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACW,KAAjB;AACI,+BACON,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACY,IAAjB;AACI,+BACOP,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACa,IAAjB;AACI,+BACOR,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACc,GAAjB;AACI,+BACOT,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACe,KAAjB;AACI,+BACOV,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACgB,KAAjB;AACI,+BACOX,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAIJ,SAAKF,WAAW,CAACiB,IAAjB;AACI,+BACOZ,KADP;AAEIH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,GAAa;AAFxB;;AAKJ,SAAKF,WAAW,CAACkB,GAAjB;AACI,aAAO;AAAChB,QAAAA,MAAM,EAAC;AAAR,OAAP;;AACJ,SAAKF,WAAW,CAACmB,QAAjB;AACI,aAAO;AAACjB,QAAAA,MAAM,EAAC;AAAR,OAAP;;AACJ,SAAKF,WAAW,CAACoB,QAAjB;AACI,aAAO;AAAClB,QAAAA,MAAM,EAAC;AAAR,OAAP;;AACJ,SAAKF,WAAW,CAACqB,MAAjB;AACI,aAAO;AAACnB,QAAAA,MAAM,EAAC;AAAR,OAAP;;AAEJ,SAAKF,WAAW,CAACsB,KAAjB;AACI,aAAO;AAACpB,QAAAA,MAAM,EAAC;AAAR,OAAP;;AACJ;AACI,aAAOG,KAAP;AAhER;AAkEH,CAnED;;AAqEA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './action'\r\n\r\nconst initialState = {\r\n    result: '0',\r\n    value: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ZERO:\r\n            return {\r\n                ...state,\r\n                result:state.result+'0'\r\n            };\r\n        case actionTypes.ONE:\r\n            return {\r\n                ...state,\r\n                result:state.result+'1'\r\n            };\r\n        case actionTypes.TWO:\r\n            return {\r\n                ...state,\r\n                result:state.result+'2'\r\n            };\r\n        case actionTypes.THREE:\r\n            return {\r\n                ...state,\r\n                result:state.result+'3'\r\n            };\r\n        case actionTypes.FOUR:\r\n            return {\r\n                ...state,\r\n                result:state.result+'4'\r\n            };\r\n        case actionTypes.FIVE:\r\n            return {\r\n                ...state,\r\n                result:state.result+'5'\r\n            };\r\n        case actionTypes.SIX:\r\n            return {\r\n                ...state,\r\n                result:state.result+'6'\r\n            };\r\n        case actionTypes.SEVEN:\r\n            return {\r\n                ...state,\r\n                result:state.result+'7'\r\n            };\r\n        case actionTypes.EIGHT:\r\n            return {\r\n                ...state,\r\n                result:state.result+'8'\r\n            };\r\n        case actionTypes.NINE:\r\n            return {\r\n                ...state,\r\n                result:state.result+'9'\r\n            };\r\n\r\n        case actionTypes.ADD:\r\n            return {result:'+'};\r\n        case actionTypes.SUBTRACT:\r\n            return {result:'-'};\r\n        case actionTypes.MULTIPLY:\r\n            return {result:'*'};\r\n        case actionTypes.DIVIDE:\r\n            return {result:'/'};\r\n\r\n        case actionTypes.EQUAL:\r\n            return {result:'='};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}