{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HP\\\\Documents\\\\Front-end\\\\calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './action';\nconst initialState = {\n  result: '0',\n  value: 0,\n  operation: null\n};\n\nconst checkResult = (result, val) => {\n  if (result.length >= 8) {\n    return result;\n  } else {\n    return result + val;\n  }\n};\n\nconst calculateResult = (num1, num2, symbol) => {\n  if (symbol === \"+\") {\n    return num1 + num2;\n  } else if (symbol === \"-\") {\n    return num1 - num2;\n  } else if (symbol === \"*\") {\n    return num1 * num2;\n  } else if (symbol === \"/\") {\n    return num1 / num2;\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ZERO:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '0')\n      });\n\n    case actionTypes.ONE:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '1')\n      });\n\n    case actionTypes.TWO:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '2')\n      });\n\n    case actionTypes.THREE:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '3')\n      });\n\n    case actionTypes.FOUR:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '4')\n      });\n\n    case actionTypes.FIVE:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '5')\n      });\n\n    case actionTypes.SIX:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '6')\n      });\n\n    case actionTypes.SEVEN:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '7')\n      });\n\n    case actionTypes.EIGHT:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '8')\n      });\n\n    case actionTypes.NINE:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '9')\n      });\n\n    case actionTypes.DECIMAL:\n      return _objectSpread({}, state, {\n        result: checkResult(state.result, '.')\n      });\n\n    case actionTypes.ADD:\n      return {\n        value: parseFloat(state.result),\n        operation: '+',\n        result: '0'\n      };\n\n    case actionTypes.SUBTRACT:\n      return {\n        value: parseFloat(state.result),\n        operation: '-',\n        result: '0'\n      };\n\n    case actionTypes.MULTIPLY:\n      return {\n        value: parseFloat(state.result),\n        operation: '*',\n        result: '0'\n      };\n\n    case actionTypes.DIVIDE:\n      return {\n        value: parseFloat(state.result),\n        operation: '/',\n        result: '0'\n      };\n\n    case actionTypes.POWER:\n      return {\n        value: parseFloat(state.result),\n        operation: '^',\n        result: '0'\n      };\n\n    case actionTypes.PERCENTAGE:\n      return state;\n\n    case actionTypes.EQUAL:\n      const res = calculateResult(state.value, parseFloat(state.result), state.operation);\n      return {\n        operation: null,\n        result: res,\n        value: res\n      };\n\n    case actionTypes.ALL_CLEAR:\n      return {\n        result: '0',\n        operation: null,\n        value: 0\n      };\n\n    case actionTypes.CLEAR:\n      return {\n        result: '0',\n        operation: null,\n        value: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\HP\\Documents\\Front-end\\calculator\\src\\store\\reducer.js"],"names":["actionTypes","initialState","result","value","operation","checkResult","val","length","calculateResult","num1","num2","symbol","reducer","state","action","type","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","DECIMAL","ADD","parseFloat","SUBTRACT","MULTIPLY","DIVIDE","POWER","PERCENTAGE","EQUAL","res","ALL_CLEAR","CLEAR"],"mappings":"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","sourcesContent":["import * as actionTypes from './action'\r\n\r\nconst initialState = {\r\n    result: '0',\r\n    value: 0,\r\n    operation:null\r\n};\r\n\r\nconst checkResult = (result,val) => {\r\n    if(result.length >=8 ) {\r\n        return result;\r\n    } else {\r\n        return result + val;\r\n    }\r\n};\r\n\r\nconst calculateResult = (num1,num2,symbol) => {\r\n  if(symbol === \"+\") {\r\n      return num1 + num2;\r\n  } else if(symbol === \"-\") {\r\n        return num1 - num2;\r\n  } else if(symbol === \"*\") {\r\n        return num1 * num2;\r\n  } else if(symbol === \"/\") {\r\n        return num1 / num2;\r\n  } \r\n};\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ZERO:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'0')\r\n            };\r\n        case actionTypes.ONE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'1')\r\n            };\r\n        case actionTypes.TWO:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'2')\r\n            };\r\n        case actionTypes.THREE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'3')\r\n            };\r\n        case actionTypes.FOUR:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'4')\r\n            };\r\n        case actionTypes.FIVE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'5')\r\n            };\r\n        case actionTypes.SIX:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'6')\r\n            };\r\n        case actionTypes.SEVEN:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'7')\r\n            };\r\n        case actionTypes.EIGHT:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'8')\r\n            };\r\n        case actionTypes.NINE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'9')\r\n            };\r\n        case actionTypes.DECIMAL:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'.')\r\n            };\r\n\r\n        case actionTypes.ADD:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'+',\r\n                result:'0'\r\n            };\r\n        case actionTypes.SUBTRACT:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'-',\r\n                result:'0'\r\n            };\r\n        case actionTypes.MULTIPLY:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'*',\r\n                result:'0'\r\n            };\r\n        case actionTypes.DIVIDE:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'/',\r\n                result:'0'\r\n            };\r\n        case actionTypes.POWER:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'^',\r\n                result:'0'\r\n            };\r\n        case actionTypes.PERCENTAGE:\r\n            return state;\r\n\r\n        case actionTypes.EQUAL:\r\n            const res = calculateResult(state.value,parseFloat(state.result),state.operation);\r\n            return {\r\n                operation:null,\r\n                result:res,\r\n                value:res\r\n            };\r\n\r\n        case actionTypes.ALL_CLEAR:\r\n            return {\r\n                result: '0',\r\n                operation:null,\r\n                value: 0\r\n            };\r\n        case actionTypes.CLEAR:\r\n            return {\r\n                result: '0',\r\n                operation:null,\r\n                value: 0\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}