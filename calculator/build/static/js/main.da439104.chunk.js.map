{"version":3,"sources":["components/Screen/Screen.css","containers/buttonList/buttonList.css","components/Button/Button.css","containers/Calculator/Calculator.css","App.css","components/Screen/Screen.js","components/Button/Button.js","store/action.js","containers/buttonList/buttonList.js","containers/Calculator/Calculator.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","screen","props","className","classes","display","id","value","button","type","onClick","clicked","class","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","DECIMAL","ADD","SUBTRACT","MULTIPLY","DIVIDE","PERCENTAGE","POWER","EQUAL","ALL_CLEAR","CLEAR","ButtonList","state","buttonList","action","actionTypes","list","this","map","obj","index","key","calcNumbers","console","log","buttons","Component","connect","dispatch","number","Calculator","container","ctr","result","App","Boolean","window","location","hostname","match","initialState","operation","checkResult","val","length","toString","replace","calculateResult","num1","num2","symbol","res","toFixed","parseFloat","returnObject","reducer","includes","substring","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da439104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Screen__display__JLBKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttonList__buttons__2XWqa\",\"row\":\"buttonList__row__1BHgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"Button__green__jKinA\",\"yellow\":\"Button__yellow__2TdbQ\",\"red\":\"Button__red__-UJfC\",\"blue\":\"Button__blue__2aq-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator__container__3Mlqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};","import React from 'react'\r\n\r\nimport classes from './Screen.css';\r\n\r\nconst screen = ( props ) => {\r\n    return (<div className={classes.display}>\r\n        <p id=\"display\">{props.value}</p>\r\n    </div>);\r\n};\r\nexport default screen;\r\n","import React from 'react'\r\n\r\nimport classes from './Button.css'\r\n\r\nconst button = ( props ) => {\r\n    // let style = {};\r\n    // if (props.value==='=') {\r\n    //     style['color'] = '#0CB999';\r\n    // }\r\n\r\n    return (<input type=\"button\"\r\n                   id={props.id}\r\n                   value={props.value}\r\n                   onClick={props.clicked} className={classes[props.class]} />);\r\n};\r\nexport default button;\r\n","export const ONE = 'One';\r\nexport const TWO = 'Two';\r\nexport const THREE = 'Three';\r\nexport const FOUR = 'Four';\r\nexport const FIVE = 'Five';\r\nexport const SIX = 'Six';\r\nexport const SEVEN = 'Seven';\r\nexport const EIGHT = 'Eight';\r\nexport const NINE= 'Nine';\r\nexport const ZERO = 'Zero';\r\nexport const DECIMAL = 'Decimal';\r\n\r\nexport const ADD = 'Add';\r\nexport const SUBTRACT = 'Subtract';\r\nexport const MULTIPLY = 'Multiply';\r\nexport const DIVIDE = 'Divide';\r\nexport const PERCENTAGE = 'Percentage';\r\nexport const POWER = 'Power';\r\n\r\nexport const EQUAL = 'Equal';\r\nexport const ALL_CLEAR = 'AllClear';\r\nexport const CLEAR = 'Clear';\r\n\r\n\r\n\r\n","import React,{ Component } from 'react'\r\n\r\nimport classes from './buttonList.css';\r\nimport Button from '../../components/Button/Button'\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as actionTypes from '../../store/action'\r\n\r\nclass ButtonList extends Component {\r\n    state = {\r\n      buttonList : [\r\n          {\r\n              id:'clear',\r\n              value:'AC',\r\n              class:'blue',\r\n              action:actionTypes.ALL_CLEAR\r\n          },\r\n          {\r\n              id:'power',\r\n              value:'^',\r\n              class:'',\r\n              action:actionTypes.POWER\r\n          },\r\n          {\r\n              id:'percentage',\r\n              value:'%',\r\n              class:'',\r\n              action:actionTypes.PERCENTAGE\r\n          },\r\n          {\r\n              id:'divide',\r\n              value:'/',\r\n              class:'yellow',\r\n              action:actionTypes.DIVIDE\r\n          },\r\n          {\r\n              id:'seven',\r\n              value:'7',\r\n              class:'',\r\n              action:actionTypes.SEVEN\r\n          },\r\n          {\r\n              id:'eight',\r\n              value:'8',\r\n              class:'',\r\n              action:actionTypes.EIGHT\r\n          },\r\n          {\r\n              id:'nine',\r\n              value:'9',\r\n              class:'',\r\n              action:actionTypes.NINE\r\n          },\r\n          {\r\n              id:'add',\r\n              value:'+',\r\n              class:'yellow',\r\n              action:actionTypes.ADD\r\n          },\r\n          {\r\n              id:'four',\r\n              value:'4',\r\n              class:'',\r\n              action:actionTypes.FOUR\r\n          },\r\n          {\r\n              id:'five',\r\n              value:'5',\r\n              class:'',\r\n              action:actionTypes.FIVE\r\n          },\r\n          {\r\n              id:'six',\r\n              value:'6',\r\n              class:'',\r\n              action:actionTypes.SIX\r\n          },\r\n          {\r\n              id:'subtract',\r\n              value:'-',\r\n              class:'yellow',\r\n              action:actionTypes.SUBTRACT\r\n          },\r\n          {\r\n              id:'one',\r\n              value:'1',\r\n              class:'',\r\n              action:actionTypes.ONE\r\n          },\r\n          {\r\n              id:'two',\r\n              value:'2',\r\n              class:'',\r\n              action:actionTypes.TWO\r\n          },\r\n          {\r\n              id:'three',\r\n              value:'3',\r\n              class:'',\r\n              action:actionTypes.THREE\r\n          },\r\n          {\r\n              id:'multiply',\r\n              value:'*',\r\n              class:'yellow',\r\n              action:actionTypes.MULTIPLY\r\n          },\r\n          {\r\n              id:'zero',\r\n              value:'0',\r\n              class:'',\r\n              action:actionTypes.ZERO\r\n          },\r\n          {\r\n              id:'decimal',\r\n              value:'.',\r\n              class:'',\r\n              action:actionTypes.DECIMAL\r\n          },\r\n          {\r\n              id:'delete',\r\n              value:'C',\r\n              class:'red',\r\n              action:actionTypes.CLEAR\r\n          },\r\n          {\r\n              id:'equals',\r\n              value:'=',\r\n              class:'green',\r\n              action:actionTypes.EQUAL\r\n          }\r\n      ]\r\n    };\r\n    render() {\r\n        const list = this.state.buttonList.map((obj,index) => (\r\n            <Button\r\n                id={obj.id}\r\n                key={obj.id}\r\n                value={obj.value}\r\n                class={obj.class}\r\n                clicked={() => this.props.calcNumbers(obj.action)}/>\r\n        ));\r\n        console.log(list);\r\n\r\n        return (\r\n            <div className={classes.buttons}>\r\n                {list}\r\n                {/*<div className={classes.row}>*/}\r\n                {/*    <Button id=\"clear\" value=\"AC\" class=\"blue\" clicked={() => this.props.calcNumbers(actionTypes.ALL_CLEAR)}/>*/}\r\n                {/*    <Button id=\"power\" value=\"^\" clicked={() => this.props.calcNumbers(actionTypes.POWER)}/>*/}\r\n                {/*    <Button id=\"percentage\" value=\"%\" clicked={() => this.props.calcNumbers(actionTypes.PERCENTAGE)}/>*/}\r\n                {/*    <Button id=\"divide\" value=\"/\" class=\"yellow\" clicked={() => this.props.calcNumbers(actionTypes.DIVIDE)}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className={classes.row}>*/}\r\n                {/*    <Button id=\"seven\" value=\"7\" clicked={() => this.props.calcNumbers(actionTypes.SEVEN)}/>*/}\r\n                {/*    <Button id=\"eight\" value=\"8\" clicked={() => this.props.calcNumbers(actionTypes.EIGHT)}/>*/}\r\n                {/*    <Button id=\"nine\" value=\"9\" clicked={() => this.props.calcNumbers(actionTypes.NINE)}/>*/}\r\n                {/*    <Button id=\"add\" value=\"+\" class=\"yellow\" clicked={() => this.props.calcNumbers(actionTypes.ADD)}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className={classes.row}>*/}\r\n                {/*    <Button id=\"four\" value=\"4\" clicked={() => this.props.calcNumbers(actionTypes.FOUR)}/>*/}\r\n                {/*    <Button id=\"five\" value=\"5\" clicked={() => this.props.calcNumbers(actionTypes.FIVE)}/>*/}\r\n                {/*    <Button id=\"six\" value=\"6\" clicked={() => this.props.calcNumbers(actionTypes.SIX)}/>*/}\r\n                {/*    <Button id=\"subtract\"  value=\"-\" class=\"yellow\" clicked={() => this.props.calcNumbers(actionTypes.SUBTRACT)}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className={classes.row}>*/}\r\n                {/*    <Button id=\"one\" value=\"1\" clicked={() => this.props.calcNumbers(actionTypes.ONE)}/>*/}\r\n                {/*    <Button id=\"two\" value=\"2\" clicked={() => this.props.calcNumbers(actionTypes.TWO)}/>*/}\r\n                {/*    <Button id=\"three\" value=\"3\" clicked={() => this.props.calcNumbers(actionTypes.THREE)}/>*/}\r\n                {/*    <Button id=\"multiply\" value=\"*\" class=\"yellow\" clicked={() => this.props.calcNumbers(actionTypes.MULTIPLY)}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className={classes.row}>*/}\r\n                {/*    <Button id=\"zero\" value=\"0\" clicked={() => this.props.calcNumbers(actionTypes.ZERO)}/>*/}\r\n                {/*    <Button id=\"decimal\" value=\".\" clicked={() => this.props.calcNumbers(actionTypes.DECIMAL)}/>*/}\r\n                {/*    <Button id=\"delete\" value=\"C\" class=\"red\" clicked={() => this.props.calcNumbers(actionTypes.CLEAR)}/>*/}\r\n                {/*    <Button id=\"equals\" value=\"=\" class=\"green\" clicked={() => this.props.calcNumbers(actionTypes.EQUAL)}/>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        calcNumbers: (number) => dispatch({type:number})\r\n    }\r\n};\r\nexport default connect(null,mapDispatchToProps)(ButtonList);\r\n","import React,{ Component } from 'react'\r\n\r\nimport Screen from '../../components/Screen/Screen'\r\nimport ButtonList from '../buttonList/buttonList'\r\nimport {connect} from 'react-redux'\r\nimport classes from './Calculator.css';\r\n\r\nclass Calculator extends Component {\r\n    render() {\r\n       return (\r\n           <div className={classes.container}>\r\n               <Screen value={this.props.ctr}/>\r\n               <ButtonList />\r\n           </div>\r\n       );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      ctr: state.result\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(Calculator);\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nimport Calculator from './containers/Calculator/Calculator'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './action'\r\n\r\nconst initialState = {\r\n    result: '0',\r\n    value: 0,\r\n    operation:null\r\n};\r\n\r\nconst checkResult = (result,val) => {\r\n    if(result.length >=8 ) {\r\n        return result;\r\n    } else {\r\n        let res  = result + val;\r\n        return res.toString().replace(/^0+/, '');\r\n    }\r\n};\r\n\r\nconst calculateResult = (num1,num2,symbol) => {\r\n    let res = 0;\r\n\r\n  if(symbol === \"+\") {\r\n      res = num1 + num2;\r\n  } else if(symbol === \"-\") {\r\n      res = num1 - num2;\r\n  } else if(symbol === \"*\") {\r\n      res = num1 * num2;\r\n  } else if(symbol === \"/\") {\r\n      res = num1 / num2;\r\n  } else if(symbol === \"/\") {\r\n      res = num1**num1;\r\n  }\r\n\r\n  res = res.toFixed(4).toString();\r\n  return parseFloat(res);\r\n};\r\n\r\nconst returnObject = (val,symbol,res = '0') => {\r\n    return {\r\n        value: parseFloat(val),\r\n        operation:symbol,\r\n        result:res\r\n    }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let result =0;\r\n    switch (action.type) {\r\n        case actionTypes.ZERO:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'0')\r\n            };\r\n        case actionTypes.ONE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'1')\r\n            };\r\n        case actionTypes.TWO:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'2')\r\n            };\r\n        case actionTypes.THREE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'3')\r\n            };\r\n        case actionTypes.FOUR:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'4')\r\n            };\r\n        case actionTypes.FIVE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'5')\r\n            };\r\n        case actionTypes.SIX:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'6')\r\n            };\r\n        case actionTypes.SEVEN:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'7')\r\n            };\r\n        case actionTypes.EIGHT:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'8')\r\n            };\r\n        case actionTypes.NINE:\r\n            return {\r\n                ...state,\r\n                result:checkResult(state.result,'9')\r\n            };\r\n        case actionTypes.DECIMAL:\r\n            if (state.result.includes('.')===true) {\r\n                return state;\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    result:checkResult(state.result,'.')\r\n                };\r\n            }\r\n\r\n        case actionTypes.ADD:\r\n            if(state.operation!==null) {\r\n                result = calculateResult(state.value,parseFloat(state.result),state.operation);\r\n                return returnObject(result,'+');\r\n            } else {\r\n                return returnObject(state.result,'+');\r\n            }\r\n        case actionTypes.SUBTRACT:\r\n            if(state.operation!==null) {\r\n                let val = 0;\r\n                if(state.result === '0') {\r\n                    return {\r\n                        ...state,\r\n                        result:checkResult(state.result,'-')\r\n                    };\r\n                } else {\r\n                    val = state.result;\r\n                }\r\n                result = calculateResult(state.value,parseFloat(val),state.operation);\r\n                return returnObject(result,'-');\r\n            } else {\r\n                return returnObject(state.result,'-');\r\n            }\r\n        case actionTypes.MULTIPLY:\r\n            if(state.operation!==null) {\r\n                result = calculateResult(state.value,parseFloat(state.result),state.operation);\r\n                return returnObject(result,'*');\r\n            } else {\r\n                return returnObject(state.result,'*');\r\n            }\r\n\r\n        case actionTypes.DIVIDE:\r\n            if(state.operation!==null) {\r\n                result = calculateResult(state.value,parseFloat(state.result),state.operation);\r\n                return returnObject(result,'/');\r\n            } else {\r\n                return returnObject(state.result,'/');\r\n            }\r\n        case actionTypes.POWER:\r\n            return {\r\n                value: parseFloat(state.result),\r\n                operation:'^',\r\n                result:'0'\r\n            };\r\n        case actionTypes.PERCENTAGE:\r\n            return state;\r\n\r\n        case actionTypes.EQUAL:\r\n            console.log(state);\r\n            result = calculateResult(state.value,parseFloat(state.result),state.operation);\r\n            return {\r\n                operation:null,\r\n                result:result,\r\n                value:result\r\n            };\r\n\r\n        case actionTypes.ALL_CLEAR:\r\n            return {\r\n                result: '0',\r\n                operation:null,\r\n                value: 0\r\n            };\r\n        case actionTypes.CLEAR:\r\n            return {\r\n                ...state,\r\n                result: state.result.substring(0, state.result.length - 1)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux'\n\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}